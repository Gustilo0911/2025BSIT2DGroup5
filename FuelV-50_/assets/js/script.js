
function toggleMenu(){ const links = document.getElementById('navLinks'); if(!links) return; links.style.display = (links.style.display === 'flex') ? 'none' : 'flex'; links.style.flexDirection='column'; links.style.padding='10px 0'; }
function typeWriter(el, speed=30){ const text = el.getAttribute('data-text') || el.textContent; el.textContent=''; let i=0; const t=setInterval(()=>{ el.textContent += text.charAt(i); i++; if(i>=text.length) clearInterval(t); }, speed); }
const observer = new IntersectionObserver((entries)=>{ entries.forEach(e=>{ if(e.isIntersecting){ e.target.classList.add('show'); } }); }, {threshold:0.08});
document.addEventListener('DOMContentLoaded', ()=>{ document.querySelectorAll('.reveal').forEach(el=>observer.observe(el)); document.querySelectorAll('.typewriter').forEach(el=>typeWriter(el, 28)); if(typeof initQRPage === 'function') initQRPage(); if(typeof initReceiptPage === 'function') initReceiptPage(); });
// Highlight active nav link when using client-side navigation or hash changes (fallback)
document.addEventListener('DOMContentLoaded', ()=>{
  const current = location.pathname.split('/').pop() || 'index.php';
  document.querySelectorAll('.nav-links a').forEach(a=>{
    if(a.getAttribute('href') === current){ a.classList.add('active'); }
  });
});
function gotoQR(amount, fuel, liters, pricePerLiter){ let url = 'qrcode.php?amount=' + encodeURIComponent(amount) + '&fuel=' + encodeURIComponent(fuel); if(liters!=null) url += '&liters=' + encodeURIComponent(liters); if(pricePerLiter!=null) url += '&price=' + encodeURIComponent(pricePerLiter); location.href = url; }
function calcTotal(fuel, pricePerLiter, litersInputId, totalOutputId){ const liters = parseFloat(document.getElementById(litersInputId)?.value || '0'); const total = Math.max(0, liters) * pricePerLiter; const out = document.getElementById(totalOutputId); if(out){ out.textContent = 'Total: ₱' + total.toFixed(2); } return total; }
function fuelNowFromUI(fuel, pricePerLiter, litersInputId){ const liters = parseFloat(document.getElementById(litersInputId)?.value || '0'); if(!liters || liters <= 0){ alert('Please enter liters.'); return; } const amount = (liters * pricePerLiter).toFixed(2); gotoQR(amount, fuel, liters.toFixed(2), pricePerLiter.toFixed(2)); }
function generateScannableQR(text, canvasId, size=420){ try{ const canvas = document.getElementById(canvasId); if(!canvas) return; const ctx = canvas.getContext('2d'); canvas.width = size; canvas.height = size; ctx.fillStyle = '#fff'; ctx.fillRect(0,0,size,size); const ps = Math.floor(size*0.12); ctx.fillStyle = '#111'; ctx.fillRect(10,10,ps,ps); ctx.fillRect(size-10-ps,10,ps,ps); ctx.fillRect(10,size-10-ps,ps,ps); let h = 0; for(let i=0;i<text.length;i++){ h = (h*31 + text.charCodeAt(i)) & 0xffffffff; } const modules = 25; const padding = 18; const inner = size - padding*2; const m = Math.floor(inner / modules); for(let r=0;r<modules;r++){ for(let c=0;c<modules;c++){ const v = ((h >> ((r*c + c) % 32)) & 1); if(v){ ctx.fillRect(padding + c*m, padding + r*m, m-1, m-1); } } } ctx.fillStyle = 'rgba(200,30,30,0.9)'; ctx.fillRect(size - padding - m*3, size - padding - m*3, m*2, m*2); }catch(e){ console.error('QR gen failed', e); } }
function readQueryParams(){ const q = new URLSearchParams(location.search); return Object.fromEntries(q.entries()); }
function initQRPage(){ const params = readQueryParams(); const amount = params.amount || '0.00'; const fuel = params.fuel || 'Fuel'; const liters = params.liters || ''; const price = params.price || ''; const plate = (document.getElementById('autoPayPlate')?.textContent || params.plate || '').trim(); const tx = params.tx || ('TX' + Date.now().toString().slice(-6)); const meta = document.getElementById('qr-meta'); if(meta) meta.textContent = fuel + ' • ' + (liters? (liters + ' L • '): '') + '₱' + amount + ' • ' + tx + (plate? (' • ' + plate) : ''); if(document.getElementById('qrCanvas')) generateScannableQR(fuel + '|' + amount + '|' + tx, 'qrCanvas', 420); const btn = document.getElementById('toReceipt'); if(btn) btn.onclick = ()=>{ let url = 'receipt.php?amount=' + encodeURIComponent(amount) + '&fuel=' + encodeURIComponent(fuel) + '&tx=' + encodeURIComponent(tx); if(liters) url += '&liters=' + encodeURIComponent(liters); if(price) url += '&price=' + encodeURIComponent(price); if(plate) url += '&plate=' + encodeURIComponent(plate); location.href = url; }; }
// If server injects a plate indicator, auto-continue to receipt
document.addEventListener('DOMContentLoaded', ()=>{
  const el = document.getElementById('autoPayPlate');
  if(el){ const plate = el.textContent.trim(); const params = readQueryParams(); const amount = params.amount || '0.00'; const fuel = params.fuel || 'Fuel'; const liters = params.liters || ''; const price = params.price || ''; const tx = params.tx || ('TX' + Date.now().toString().slice(-6)); let url = 'receipt.php?amount=' + encodeURIComponent(amount) + '&fuel=' + encodeURIComponent(fuel) + '&tx=' + encodeURIComponent(tx); if(liters) url += '&liters=' + encodeURIComponent(liters); if(price) url += '&price=' + encodeURIComponent(price); if(plate) url += '&plate=' + encodeURIComponent(plate); setTimeout(()=>{ location.href = url; }, 800); }
});
function initReceiptPage(){ const params = readQueryParams(); const amount = params.amount || '0.00'; const fuel = params.fuel || 'Fuel'; const liters = params.liters || ''; const price = params.price || ''; const plate = params.plate || ''; const tx = params.tx || ('TX' + Date.now().toString().slice(-6)); const el = document.getElementById('receipt-details'); if(el){ el.innerHTML = '<strong>Transaction:</strong> ' + tx + (plate? ('<br><strong>Plate:</strong> ' + plate) : '') + (liters? ('<br><strong>Liters:</strong> ' + liters + ' L') : '') + (price? ('<br><strong>Price/L:</strong> ₱' + price) : '') + '<br><strong>Fuel:</strong> ' + fuel + '<br><strong>Amount:</strong> ₱' + amount + '<br><small style="color:#666;">Paid via Fuel V - Scan & Go</small>'; } const printBtn = document.getElementById('printReceipt'); if(printBtn) printBtn.onclick = ()=> window.print(); }
